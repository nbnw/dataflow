//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using VSShellInterop = global::Microsoft.VisualStudio.Shell.Interop;
using VSShell = global::Microsoft.VisualStudio.Shell;
using DslShell = global::Microsoft.VisualStudio.Modeling.Shell;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslModeling = global::Microsoft.VisualStudio.Modeling;
using System;
using System.Diagnostics;
using System.Drawing.Design;
using System.Linq;
using System.Windows.Forms;
	
namespace NBNW.Dataflow
{
	/// <summary>
	/// This class implements the VS package that integrates this DSL into Visual Studio.
	/// </summary>
	[VSShell::DefaultRegistryRoot("Software\\Microsoft\\VisualStudio\\15.0")]
	[VSShell::PackageRegistration(RegisterUsing = VSShell::RegistrationMethod.Assembly, UseManagedResourcesOnly = true)]
	[VSShell::ProvideToolWindow(typeof(DataflowExplorerToolWindow), MultiInstances = false, Style = VSShell::VsDockStyle.Tabbed, Orientation = VSShell::ToolWindowOrientation.Right, Window = "{3AE79031-E1BC-11D0-8F78-00A0C9110057}")]
	[VSShell::ProvideToolWindowVisibility(typeof(DataflowExplorerToolWindow), Constants.DataflowEditorFactoryId)]
	[VSShell::ProvideStaticToolboxGroup("@DataflowToolboxTab;NBNW.Dataflow.Dsl.dll", "NBNW.Dataflow.DataflowToolboxTab")]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@TaskToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.TaskToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateTaskF1Keyword", 
					"@TaskToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 0)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@StartPointToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.StartPointToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateStartStateF1Keyword", 
					"@StartPointToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 1)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@EndPointToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.EndPointToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateFinalStateF1Keyword", 
					"@EndPointToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 2)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@MergeBranchToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.MergeBranchToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateMergeBranchF1Keyword", 
					"@MergeBranchToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 3)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@SynchronizationToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.SynchronizationToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Synchronization", 
					"@SynchronizationToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 4)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@FlowToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.FlowToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ConnectFlowF1Keyword", 
					"@FlowToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 5)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@ObjectInStateToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.ObjectInStateToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateObjectInStateF1Keyword", 
					"@ObjectInStateToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 6)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@CommentToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.CommentToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"CreateCommentF1Keyword", 
					"@CommentToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 7)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@CommentSubjectsToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.CommentSubjectsToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"ConnectCommentSubjectsF1Keyword", 
					"@CommentSubjectsToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 8)]
	[VSShell::ProvideStaticToolboxItem("NBNW.Dataflow.DataflowToolboxTab",
					"@ActorToolboxItem;NBNW.Dataflow.Dsl.dll", 
					"NBNW.Dataflow.ActorToolboxItem", 
					"CF_TOOLBOXITEMCONTAINER,CF_TOOLBOXITEMCONTAINER_HASH,CF_TOOLBOXITEMCONTAINER_CONTENTS", 
					"Actor", 
					"@ActorToolboxBitmap;NBNW.Dataflow.Dsl.dll", 
					0xff00ff,
					Index = 9)]
	[VSShell::ProvideEditorFactory(typeof(DataflowEditorFactory), 103, TrustLevel = VSShellInterop::__VSEDITORTRUSTLEVEL.ETL_AlwaysTrusted)]
	[VSShell::ProvideEditorExtension(typeof(DataflowEditorFactory), "." + Constants.DesignerFileExtension, 50)]
	[VSShell::ProvideEditorLogicalView(typeof(DataflowEditorFactory), "{7651A702-06E5-11D1-8EBD-00A0C90F26EA}")] // Designer logical view GUID i.e. VSConstants.LOGVIEWID_Designer
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.CSharpProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::ProvideRelatedFile("." + Constants.DesignerFileExtension, Constants.DefaultDiagramExtension,
		ProjectSystem = DslShell::ProvideRelatedFileAttribute.VisualBasicProjectGuid,
		FileOptions = DslShell::RelatedFileType.FileName)]
	[DslShell::RegisterAsDslToolsEditor]
	[global::System.Runtime.InteropServices.ComVisible(true)]
	[DslShell::ProvideBindingPath]
	[DslShell::ProvideXmlEditorChooserBlockSxSWithXmlEditor(@"Dataflow", typeof(DataflowEditorFactory))]

	internal abstract partial class DataflowPackageBase : DslShell::ModelingPackage
	{
		protected global::NBNW.Dataflow.DataflowToolboxHelper toolboxHelper;	
		
		/// <summary>
		/// Initialization method called by the package base class when this package is loaded.
		/// </summary>
		protected override void Initialize()
		{
			base.Initialize();

			// Register the editor factory used to create the DSL editor.
			this.RegisterEditorFactory(new DataflowEditorFactory(this));
			
			// Initialize the toolbox helper
			toolboxHelper = new global::NBNW.Dataflow.DataflowToolboxHelper(this);

			// Create the command set that handles menu commands provided by this package.
			DataflowCommandSet commandSet = new DataflowCommandSet(this);
			commandSet.Initialize();
			
			// Create the command set that handles cut/copy/paste commands provided by this package.
			DataflowClipboardCommandSet clipboardCommandSet = new DataflowClipboardCommandSet(this);
			clipboardCommandSet.Initialize();
			
			// Register the model explorer tool window for this DSL.
			this.AddToolWindow(typeof(DataflowExplorerToolWindow));

			// Initialize Extension Registars
			// this is a partial method call
			this.InitializeExtensions();

			// Add dynamic toolbox items
			this.SetupDynamicToolbox();
		}

		/// <summary>
		/// Partial method to initialize ExtensionRegistrars (if any) in the DslPackage
		/// </summary>
		partial void InitializeExtensions();
		
		/// <summary>
		/// Returns any dynamic tool items for the designer
		/// </summary>
		/// <remarks>The default implementation is to return the list of items from the generated toolbox helper.</remarks>
		protected override global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
		{
			try
			{
				Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
				return toolboxHelper.CreateToolboxItems();
			}
			catch(global::System.Exception e)
			{
				global::System.Diagnostics.Debug.Fail("Exception thrown during toolbox item creation.  This may result in Package Load Failure:\r\n\r\n" + e);
				throw;
			}
		}
		
		
		/// <summary>
		/// Given a toolbox item "unique ID" and a data format identifier, returns the content of
		/// the data format. 
		/// </summary>
		/// <param name="itemId">The unique ToolboxItem to retrieve data for</param>
		/// <param name="format">The desired format of the resulting data</param>
		protected override object GetToolboxItemData(string itemId, DataFormats.Format format)
		{
			Debug.Assert(toolboxHelper != null, "Toolbox helper is not initialized");
		
			// Retrieve the specified ToolboxItem from the DSL
			return toolboxHelper.GetToolboxItemData(itemId, format);
		}
	}

}

//
// Package attributes which may need to change are placed on the partial class below, rather than in the main include file.
//
namespace NBNW.Dataflow
{
	/// <summary>
	/// Double-derived class to allow easier code customization.
	/// </summary>
	[VSShell::ProvideMenuResource("1000.ctmenu", 1)]
	[VSShell::ProvideToolboxItems(1)]
	[global::Microsoft.VisualStudio.TextTemplating.VSHost.ProvideDirectiveProcessor(typeof(global::NBNW.Dataflow.DataflowDirectiveProcessor), global::NBNW.Dataflow.DataflowDirectiveProcessor.DataflowDirectiveProcessorName, "A directive processor that provides access to Dataflow files")]
	[global::System.Runtime.InteropServices.Guid(Constants.DataflowPackageId)]
	internal sealed partial class DataflowPackage : DataflowPackageBase
	{
	}
}